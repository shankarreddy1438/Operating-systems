#include <stdio.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int main() {
    int bt[] = {6, 8, 7, 3}; // Burst time of processes
    int n = sizeof(bt) / sizeof(bt[0]); // Number of processes
    int wt[n], tat[n], ct[n];
    float avg_wt = 0, avg_tat = 0;
    
    // Sort the processes based on their burst time using Selection Sort
    for (int i = 0; i < n - 1; i++) {
        int min_idx = i;
        for (int j = i + 1; j < n; j++) {
            if (bt[j] < bt[min_idx]) {
                min_idx = j;
            }
        }
        swap(&bt[min_idx], &bt[i]);
    }
    
    // Compute the completion time for each process
    ct[0] = bt[0];
    for (int i = 1; i < n; i++) {
        ct[i] = ct[i-1] + bt[i];
    }
    
    // Compute the waiting time and turnaround time for each process
    for (int i = 0; i < n; i++) {
        tat[i] = ct[i];
        wt[i] = tat[i] - bt[i];
        avg_wt += wt[i];
        avg_tat += tat[i];
    }
    
    // Compute the average waiting time and average turnaround time
    avg_wt /= n;
    avg_tat /= n;
    
    // Print the process details and the computed values
    printf("Process\tBurst Time\tCompletion Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t\t%d\t\t%d\t\t%d\n", i+1, bt[i], ct[i], wt[i], tat[i]);
    }
    printf("\nAverage Waiting Time: %.2f\n", avg_wt);
    printf("Average Turnaround Time: %.2f\n", avg_tat);
    
    return 0;
}
