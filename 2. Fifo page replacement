#include<stdio.h>

int main()
{
    int frames[3] = {-1, -1, -1};   // Array to hold page frames, initialized with -1
    int pages[8] = {4, 1, 2, 4, 3, 2, 1, 5};   // Page reference sequence
    int num_frames = 3;   // Number of page frames
    int num_pages = 8;   // Number of pages in the reference sequence
    int page_faults = 0;   // Counter for number of page faults
    int frame_pointer = 0;   // Pointer to the oldest frame in the FIFO queue
    
    // Iterate over the page reference sequence
    for (int i = 0; i < num_pages; i++) {
        int page = pages[i];
        int page_found = 0;
        
        // Check if the page is already present in one of the frames
        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == page) {
                page_found = 1;
                break;
            }
        }
        
        // If page not found, replace the oldest frame with the new page
        if (page_found == 0) {
            frames[frame_pointer] = page;
            frame_pointer = (frame_pointer + 1) % num_frames;
            page_faults++;
        }
        
        // Print the page frames after processing the current page
        printf("Page %d: ", page);
        for (int j = 0; j < num_frames; j++) {
            if (frames[j] == -1) {
                printf("- ");
            } else {
                printf("%d ", frames[j]);
            }
        }
        printf("\n");
    }
    
    // Print the total number of page faults
    printf("Total page faults: %d\n", page_faults);
    
    return 0;
}
